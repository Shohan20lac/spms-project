[{"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\index.js":"1","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\App.js":"2","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\reportWebVitals.js":"3","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\AdminDashboard.js":"4","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\Auth.js":"5","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\PrivateRoute.js":"6","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\SignInForm.js":"7","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\accreditorDashboard\\AccreditorDashboard.js":"8","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\studentDashboard\\StudentDashboard.js":"9","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\facultyDashboard\\FacultyDashboard.js":"10","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\Dashboard.js":"11","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\managementDashboard\\ManagementDashboard.js":"12","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\dashboardComponents\\listItems.js":"13","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddCourse.js":"14","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\AddNewAccount.js":"15","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddDegreeProgram.js":"16","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddSchool.js":"17","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddDepartment.js":"18","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddSemester.js":"19","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddOfferedCourse.js":"20","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddSchoolForm.js":"21","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddSemesterForm.js":"22","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddDepartmentForm.js":"23","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddDegreeProgramForm.js":"24","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddCourseForm.js":"25","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddFaculty.js":"26","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddStudents.js":"27","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddFacultyForm.js":"28","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddStudentForm.js":"29","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddOfferedCourseForm.js":"30","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\SemesterTable.js":"31","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\SchoolTable.js":"32","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\DepartmentTable.js":"33"},{"size":544,"mtime":1609884895341,"results":"34","hashOfConfig":"35"},{"size":2686,"mtime":1609955924926,"results":"36","hashOfConfig":"35"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"35"},{"size":8162,"mtime":1609896613476,"results":"38","hashOfConfig":"35"},{"size":257,"mtime":1609821347634,"results":"39","hashOfConfig":"35"},{"size":466,"mtime":1609882587745,"results":"40","hashOfConfig":"35"},{"size":5906,"mtime":1609867456278,"results":"41","hashOfConfig":"35"},{"size":5504,"mtime":1609961408278,"results":"42","hashOfConfig":"35"},{"size":5918,"mtime":1609857377418,"results":"43","hashOfConfig":"35"},{"size":5918,"mtime":1609857326766,"results":"44","hashOfConfig":"35"},{"size":1597,"mtime":1609881628270,"results":"45","hashOfConfig":"35"},{"size":5924,"mtime":1609859411635,"results":"46","hashOfConfig":"35"},{"size":6905,"mtime":1609896745166,"results":"47","hashOfConfig":"35"},{"size":247,"mtime":1609897820124,"results":"48","hashOfConfig":"35"},{"size":89,"mtime":1609896650060,"results":"49","hashOfConfig":"35"},{"size":288,"mtime":1609894524136,"results":"50","hashOfConfig":"35"},{"size":379,"mtime":1609976149764,"results":"51","hashOfConfig":"35"},{"size":419,"mtime":1609983348981,"results":"52","hashOfConfig":"35"},{"size":398,"mtime":1609964460479,"results":"53","hashOfConfig":"35"},{"size":289,"mtime":1609906690263,"results":"54","hashOfConfig":"35"},{"size":4713,"mtime":1609975601243,"results":"55","hashOfConfig":"35"},{"size":6655,"mtime":1609971520483,"results":"56","hashOfConfig":"35"},{"size":5677,"mtime":1609983072321,"results":"57","hashOfConfig":"35"},{"size":4732,"mtime":1609895409856,"results":"58","hashOfConfig":"35"},{"size":6881,"mtime":1609899390755,"results":"59","hashOfConfig":"35"},{"size":251,"mtime":1609898784297,"results":"60","hashOfConfig":"35"},{"size":253,"mtime":1609902607001,"results":"61","hashOfConfig":"35"},{"size":5785,"mtime":1609899338855,"results":"62","hashOfConfig":"35"},{"size":6719,"mtime":1609963186621,"results":"63","hashOfConfig":"35"},{"size":5242,"mtime":1609907282395,"results":"64","hashOfConfig":"35"},{"size":2519,"mtime":1609978314110,"results":"65","hashOfConfig":"35"},{"size":2380,"mtime":1609978292380,"results":"66","hashOfConfig":"35"},{"size":2683,"mtime":1609981766594,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"129xggd",{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"70"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"70"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"70"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"70"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"70"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\index.js",[],["144","145"],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\App.js",["146"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Dashboard from './views/Dashboard'\nimport SignInForm from './views/SignInForm';\nimport axios from 'axios';\nimport Auth from './Auth';\nimport PrivateRoute from './PrivateRoute';\n\nlet account = {\n  accountType: '',\n  accountID: ''\n}\n\nclass SignIn extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      accountType: '',\n      accountID: '',\n      password: '',\n      redirectToReferrer: false,\n      successMessage: 'Enter your username and password to login.'\n    };\n\n    this.handleSignInSubmit = this.handleSignInSubmit.bind(this);\n    this.handleSignInChange = this.handleSignInChange.bind(this);\n  }\n\n  handleSignInChange (event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSignInSubmit (event) {\n    this.login(this.state.accountType, this.state.accountID, this.state.password)\n  }\n\n  login = async (accountType, accountID, password) => {\n    console.log()\n    const response = await axios.post (\n      '/login',\n      { accountType: accountType, accountID: accountID, password: password },\n      { headers: { 'Content-Type': 'application/json' } }\n    )\n    console.log(response);\n    this.setState({\n      successMessage: response.data.success\n    });\n    if (response.data.success === 'Login Sucessfull.') {\n      Auth.authenticate();\n      this.setState({\n          redirectToReferrer: true\n      });\n      account.accountType = this.state.accountType;\n      account.accountID = this.state.accountID;\n    }\n    else {\n      Auth.signOut();\n    }\n  }\n\n  render () {  \n    let { from } = this.props.location.pathname || { from: {pathname: '/'}};\n\n    if (this.state.redirectToReferrer) {\n      return <Redirect to={'/dashboard?accountType=' + this.state.accountType + '&accountID=' + this.state.accountID }/>\n    }\n\n    return (\n      <div className=\"SignInForm\">\n        <SignInForm\n          successMessage={this.state.successMessage} \n          onHandleChange={this.handleSignInChange}\n          onHandleSubmit={this.handleSignInSubmit} />\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  render () {\n    return (\n      <Router>\n        <div className=\"Dashboard\">\n        <header className=\"Dashboard-header\">\n        </header>\n\n        <Switch>\n          <Route path='/sign-in' component={SignIn} />\n          <PrivateRoute path='/dashboard' component={Dashboard} />\n          <Route component={SignIn} />\n        </Switch>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\reportWebVitals.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\AdminDashboard.js",["147"],"/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\nimport Auth from '../../Auth.js';\r\nimport PrivateRoute from '../../PrivateRoute.js';\r\nimport MainListItems from './dashboardComponents/listItems';\r\nimport AddNewAccount from './views/AddNewAccount.js';\r\nimport ViewAddCourse from './views/ViewAddCourse.js';\r\nimport ViewAddDegreeProgram from './views/ViewAddDegreeProgram.js';\r\nimport ViewAddDepartment from './views/ViewAddDepartment.js';\r\nimport ViewAddOfferedCourse from './views/ViewAddOfferedCourse.js';\r\nimport ViewAddSchool from './views/ViewAddSchool.js';\r\nimport ViewAddSemester from './views/ViewAddSemester.js';\r\nimport ViewAddFaculty from './views/ViewAddFaculty.js';\r\nimport ViewAddStudents from './views/ViewAddStudents.js';\r\n\r\nconst NotFound = ({ location }) => {\r\n  \r\n  return (\r\n    <div>\r\n      <h3>No match for <code>{location.pathname}</code></h3>\r\n    </div> );\r\n}\r\nfunction Home () {\r\n  return (\r\n    <Grid item xs={12} md={12} lg={12}>\r\n      <Paper>\r\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom>\r\n          Welcome to your Dashboard\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n          Refer to the left panel for your options\r\n        </Typography>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 350;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function AdminDashboard (props) {  \r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [accountID, setAccountID] = useState('');\r\n  const [accountType, setAccountType] = useState('');\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSignOutClick = () => {\r\n    console.log('click')\r\n    if (Auth.isAuthenticated === true) {\r\n      Auth.signOut();\r\n      props.history.push('/');\r\n    }\r\n  }\r\n\r\n  useEffect(()=> {\r\n    return () => {\r\n      setAccountType(props.accountType);\r\n      setAccountID(props.accountID);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <Router>\r\n\r\n      <div className={classes.root}>\r\n\r\n        <CssBaseline />\r\n\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Admin Dashboard\r\n            </Typography>\r\n            <Link>\r\n              <ListItem button>\r\n                  <ListItemText>\r\n                    <Button onClick={handleSignOutClick}>\r\n                      Sign Out\r\n                    </Button>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <MainListItems\r\n              accountID={props.accountID}\r\n              accountType={props.accountType}\r\n            ></MainListItems>\r\n          </List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n\r\n            <Switch>\r\n              <PrivateRoute exact path='/dashboard' component={Home} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-courses'} component={ViewAddCourse} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-semester'} component={ViewAddSemester} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-offered-course'} component={ViewAddOfferedCourse} />\r\n              <PrivateRoute exact path={'/dashboard/view-students'} component={ViewAddStudents} />\r\n              <PrivateRoute exact path={'/dashboard/view-faculties'} component={ViewAddFaculty} />\r\n              <PrivateRoute exact path={'/dashboard/add-new-account'} component={AddNewAccount} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-school'} component={ViewAddSchool} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-dept'} component={ViewAddDepartment} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-degree-programs'} component={ViewAddDegreeProgram} />\r\n              <PrivateRoute component={NotFound} />\r\n            </Switch>\r\n\r\n            </Grid>\r\n\r\n          </Container>\r\n\r\n        </main>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\Auth.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\PrivateRoute.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\SignInForm.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\accreditorDashboard\\AccreditorDashboard.js",["148"],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\studentDashboard\\StudentDashboard.js",["149","150"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\n\r\nconst NotFound = ({ location }) => (\r\n  <div>\r\n    <h3>No match for <code>{location.pathname}</code></h3>\r\n  </div>\r\n)\r\n\r\nfunction Copyright () {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function StudentDashboard (props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  /*const handleSignOutClick = () => {\r\n    console.log('click')\r\n    if (Auth.isAuthenticated === true) {\r\n      Auth.signOut();\r\n      props.history.push('/');\r\n    }\r\n  }*/\r\n\r\n  return (\r\n\r\n    <Router>\r\n\r\n      <div className={classes.root}>\r\n\r\n        <CssBaseline />\r\n\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Student Dashboard\r\n            </Typography>\r\n            <Link>\r\n              <ListItem button>\r\n                  <ListItemText>\r\n                    <Button >\r\n                      Sign Out\r\n                    </Button>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List></List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n\r\n              {/* Heading */}\r\n          \r\n                <h1>hello</h1>\r\n\r\n            </Grid>\r\n\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n          </Container>\r\n\r\n        </main>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\facultyDashboard\\FacultyDashboard.js",["151","152"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\n\r\nconst NotFound = ({ location }) => (\r\n  <div>\r\n    <h3>No match for <code>{location.pathname}</code></h3>\r\n  </div>\r\n)\r\n\r\nfunction Copyright () {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function FacultyDashboard (props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  /*const handleSignOutClick = () => {\r\n    console.log('click')\r\n    if (Auth.isAuthenticated === true) {\r\n      Auth.signOut();\r\n      props.history.push('/');\r\n    }\r\n  }*/\r\n\r\n  return (\r\n\r\n    <Router>\r\n\r\n      <div className={classes.root}>\r\n\r\n        <CssBaseline />\r\n\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Faculty Dashboard\r\n            </Typography>\r\n            <Link>\r\n              <ListItem button>\r\n                  <ListItemText>\r\n                    <Button >\r\n                      Sign Out\r\n                    </Button>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List></List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n\r\n              {/* Heading */}\r\n          \r\n                <h1>hello</h1>\r\n\r\n            </Grid>\r\n\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n          </Container>\r\n\r\n        </main>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\Dashboard.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\managementDashboard\\ManagementDashboard.js",["153","154"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\n\r\nconst NotFound = ({ location }) => (\r\n  <div>\r\n    <h3>No match for <code>{location.pathname}</code></h3>\r\n  </div>\r\n)\r\n\r\nfunction Copyright () {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function ManagementDashboard (props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  /*const handleSignOutClick = () => {\r\n    console.log('click')\r\n    if (Auth.isAuthenticated === true) {\r\n      Auth.signOut();\r\n      props.history.push('/');\r\n    }\r\n  }*/\r\n\r\n  return (\r\n\r\n    <Router>\r\n\r\n      <div className={classes.root}>\r\n\r\n        <CssBaseline />\r\n\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Management Dashboard\r\n            </Typography>\r\n            <Link>\r\n              <ListItem button>\r\n                  <ListItemText>\r\n                    <Button >\r\n                      Sign Out\r\n                    </Button>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List></List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n\r\n              {/* Heading */}\r\n          \r\n                <h1>hello</h1>\r\n\r\n            </Grid>\r\n\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n          </Container>\r\n\r\n        </main>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\dashboardComponents\\listItems.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddCourse.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\AddNewAccount.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddDegreeProgram.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddSchool.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddDepartment.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddSemester.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddOfferedCourse.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddSchoolForm.js",["155","156","157"],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddSemesterForm.js",["158","159"],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddDepartmentForm.js",["160","161","162"],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddDegreeProgramForm.js",["163","164"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nclass AddDegreeProgramForm extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            degreeID: '',\r\n            degreeTitle: '',\r\n            deptID: []\r\n        };\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    }\r\n\r\n    handleChange (event) {\r\n        this.props.onHandleChange(event);\r\n    }\r\n\r\n    handleSubmit (event) {\r\n        event.preventDefault();\r\n        this.props.onHandleSubmit(event);\r\n    }  \r\n\r\n    \r\n    handleSelectChange (event) {\r\n        this.setState({\r\n            deptID: event.target.value\r\n        });\r\n        this.props.onHandleChange(event);\r\n    }\r\n\r\n    render () {\r\n        const classes = useStyles;\r\n        let successMessage = this.props.successMessage;\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Add a Degree Program\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"degreeID\"\r\n                                label=\"Degree ID\"\r\n                                name=\"degreeID\"\r\n                                autoFocus\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"degreeTitle\"\r\n                                label=\"Degree Title\"\r\n                                name=\"degreeTitle\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                fullWidth\r\n                                required\r\n                                id=\"deptID\"\r\n                                name=\"deptID\"\r\n                                select\r\n                                label=\"Department ID\"\r\n                                value={this.state.deptID}\r\n                                onChange={this.handleSelectChange}\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                >\r\n                                    { /* load departments from database tab */ }\r\n                            </TextField>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </form>\r\n                        <Typography>\r\n                            { successMessage }\r\n                        </Typography>\r\n                    </div>\r\n                </Container>\r\n            </MuiPickersUtilsProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddDegreeProgramForm;","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddCourseForm.js",["165","166"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nclass AddCourseForm extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            courseID: 0,\r\n            courseTitle: '',\r\n            courseDescription: '',\r\n            creditHour: 0.0,\r\n            deptID: '',\r\n            degreeID: ''\r\n        };\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDeptIDSelectChange = this.handleDeptIDSelectChange.bind(this);\r\n        this.handleDegreeIDSelectChange = this.handleDegreeIDSelectChange.bind(this);\r\n    }\r\n\r\n    handleChange (name, event) {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit (name, event) {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }  \r\n\r\n    \r\n    handleDeptIDSelectChange (event) {\r\n        this.setState({\r\n            deptID: event.target.value\r\n        });\r\n        this.props.onHandleChange(event);\r\n    }\r\n\r\n    handleDegreeIDSelectChange (event) {\r\n        this.setState({\r\n            degreeID: event.target.value\r\n        });\r\n        this.props.onHandleChange(event);\r\n    }\r\n\r\n    render () {\r\n        const classes = useStyles;\r\n        let successMessage = this.props.successMessage;\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Add a Course\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"courseID\"\r\n                                label=\"courseID\"\r\n                                name=\"Course ID\"\r\n                                autoFocus\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"courseTitle\"\r\n                                label=\"Course Title\"\r\n                                name=\"courseTitle\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                id=\"courseDescription\"\r\n                                label=\"Course Description\"\r\n                                onChange={this.handleChange}\r\n                                multiline\r\n                                required\r\n                                fullWidth\r\n                                defaultValue=\"\"\r\n                                variant=\"filled\"\r\n                            />\r\n                            <TextField\r\n                                type=\"number\"\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"creditHour\"\r\n                                label=\"Credit Hour\"\r\n                                name=\"creditHour\"\r\n                                autoFocus\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                fullWidth\r\n                                required\r\n                                id=\"deptID\"\r\n                                name=\"deptID\"\r\n                                select\r\n                                label=\"Department ID\"\r\n                                value={this.state.deptID}\r\n                                onChange={this.handleDeptIDSelectChange}\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                >\r\n                                    { /* load departments from database tab */ }\r\n                            </TextField>\r\n                            <TextField\r\n                                fullWidth\r\n                                required\r\n                                id=\"degreeID\"\r\n                                name=\"degreeID\"\r\n                                select\r\n                                label=\"Degree ID\"\r\n                                value={this.state.degreeID}\r\n                                onChange={this.handleDegreeIDSelectChange}\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                >\r\n                                    { /* load departments from database tab */ }\r\n                            </TextField>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </form>\r\n                        <Typography>\r\n                            { successMessage }\r\n                        </Typography>\r\n                    </div>\r\n                </Container>\r\n            </MuiPickersUtilsProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddCourseForm;","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddFaculty.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddStudents.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddFacultyForm.js",["167","168"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nclass AddFacultyForm extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            accountID: 0,\r\n            specialization: '',\r\n            deptID: '',\r\n            dateHired: new Date('2014-08-18T21:11:54')\r\n        };\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleDeptIDSelectChange = this.handleDeptIDSelectChange.bind(this);\r\n    }\r\n\r\n    handleChange (name, event) {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit (name, event) {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }  \r\n\r\n    \r\n    handleDeptIDSelectChange (event) {\r\n        this.setState({\r\n            accountType: event.target.value\r\n        });\r\n        this.props.onHandleChange(event);\r\n    }\r\n\r\n    handleEndDateChange (event) {\r\n        console.dir(event);\r\n        this.setState({\r\n            dateHired: event\r\n        });\r\n        //this.props.onHandleChange(event);\r\n    }\r\n\r\n    render () {\r\n        const classes = useStyles;\r\n        let successMessage = this.props.successMessage;\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Add a Faculty\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"specialization\"\r\n                                label=\"Faculty Specialization\"\r\n                                name=\"specialization\"\r\n                                autoFocus\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                type=\"number\"\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"accountID\"\r\n                                label=\"Account ID\"\r\n                                name=\"accountID\"\r\n                                autoFocus\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                fullWidth\r\n                                required\r\n                                id=\"deptID\"\r\n                                name=\"deptID\"\r\n                                select\r\n                                label=\"Department ID\"\r\n                                value={this.state.deptID}\r\n                                onChange={this.handleDeptIDSelectChange}\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                >\r\n                                    { /* load departments from database tab */ }\r\n                            </TextField>\r\n                            <KeyboardDatePicker\r\n                                fullWidth\r\n                                format=\"MM/dd/yyyy\"\r\n                                margin=\"normal\"\r\n                                id=\"dateHired\"\r\n                                label=\"Date Hired\"\r\n                                value={this.state.dateHired}\r\n                                onChange={this.handleDateHireChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </form>\r\n                        <Typography>\r\n                            { successMessage }\r\n                        </Typography>\r\n                    </div>\r\n                </Container>\r\n            </MuiPickersUtilsProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddFacultyForm;","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddStudentForm.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddOfferedCourseForm.js",["169","170","171"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from '@material-ui/pickers';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nclass AddStudentForm extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            offeredCourseID: '',\r\n            semesterSeason: '',\r\n            semesterYear: '',\r\n            courseCoordinatorID: 0,\r\n        };\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange (name, event) {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }\r\n\r\n    handleSubmit (name, event) {\r\n        this.setState({\r\n            [name]: event.target.value\r\n        });\r\n    }  \r\n\r\n    render () {\r\n        const classes = useStyles;\r\n        let successMessage = this.props.successMessage;\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Add an Offered Course\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"offeredCourseID\"\r\n                                label=\"Offered Course ID\"\r\n                                name=\"offeredCourseID\"\r\n                                autoFocus\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                type=\"number\"\r\n                                fullWidth\r\n                                required\r\n                                id=\"courseInstructorID\"\r\n                                name=\"courseInstructorID\"\r\n                                label=\"Course Instructor ID\"\r\n                                value={this.state.courseInstructorID}\r\n                                onChange={this.handleChange}\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                >\r\n                                    { /* load departments from database tab */ }\r\n                            </TextField>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"semesterSeason\"\r\n                                label=\"semesterSeason\"\r\n                                name=\"semesterSeason\"\r\n                                autoFocus\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"semesterYear\"\r\n                                label=\"semesterYear\"\r\n                                name=\"semesterYear\"\r\n                                autoFocus\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </form>\r\n                        <Typography>\r\n                            { successMessage }\r\n                        </Typography>\r\n                    </div>\r\n                </Container>\r\n            </MuiPickersUtilsProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddStudentForm;","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\SemesterTable.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\SchoolTable.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\DepartmentTable.js",[],{"ruleId":"172","replacedBy":"173"},{"ruleId":"174","replacedBy":"175"},{"ruleId":"176","severity":1,"message":"177","line":68,"column":11,"nodeType":"178","messageId":"179","endLine":68,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":165,"column":6,"nodeType":"182","endLine":165,"endColumn":8,"suggestions":"183"},{"ruleId":"176","severity":1,"message":"184","line":23,"column":7,"nodeType":"178","messageId":"179","endLine":23,"endColumn":15},{"ruleId":"176","severity":1,"message":"185","line":14,"column":8,"nodeType":"178","messageId":"179","endLine":14,"endColumn":13},{"ruleId":"176","severity":1,"message":"184","line":24,"column":7,"nodeType":"178","messageId":"179","endLine":24,"endColumn":15},{"ruleId":"176","severity":1,"message":"185","line":14,"column":8,"nodeType":"178","messageId":"179","endLine":14,"endColumn":13},{"ruleId":"176","severity":1,"message":"184","line":24,"column":7,"nodeType":"178","messageId":"179","endLine":24,"endColumn":15},{"ruleId":"176","severity":1,"message":"185","line":14,"column":8,"nodeType":"178","messageId":"179","endLine":14,"endColumn":13},{"ruleId":"176","severity":1,"message":"184","line":24,"column":7,"nodeType":"178","messageId":"179","endLine":24,"endColumn":15},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"187","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":24},{"ruleId":"176","severity":1,"message":"188","line":10,"column":8,"nodeType":"178","messageId":"179","endLine":10,"endColumn":16},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"187","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":24},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"187","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":24},{"ruleId":"176","severity":1,"message":"189","line":13,"column":3,"nodeType":"178","messageId":"179","endLine":13,"endColumn":21},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"187","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":24},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"187","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":24},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"187","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":24},{"ruleId":"176","severity":1,"message":"186","line":2,"column":8,"nodeType":"178","messageId":"179","endLine":2,"endColumn":14},{"ruleId":"176","severity":1,"message":"187","line":6,"column":8,"nodeType":"178","messageId":"179","endLine":6,"endColumn":24},{"ruleId":"176","severity":1,"message":"189","line":13,"column":3,"nodeType":"178","messageId":"179","endLine":13,"endColumn":21},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'from' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.accountID' and 'props.accountType'. Either include them or remove the dependency array. If 'setAccountType' needs the current value of 'props.accountType', you can also switch to useReducer instead of useState and read 'props.accountType' in the reducer.","ArrayExpression",["192"],"'NotFound' is assigned a value but never used.","'Paper' is defined but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'MenuItem' is defined but never used.","'KeyboardDatePicker' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"193","fix":"194"},"Update the dependencies array to be: [props.accountID, props.accountType]",{"range":"195","text":"196"},[5049,5051],"[props.accountID, props.accountType]"]