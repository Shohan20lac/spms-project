[{"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\index.js":"1","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\App.js":"2","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\reportWebVitals.js":"3","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\AdminDashboard.js":"4","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\Auth.js":"5","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\PrivateRoute.js":"6","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\SignInForm.js":"7","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\accreditorDashboard\\AccreditorDashboard.js":"8","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\studentDashboard\\StudentDashboard.js":"9","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\facultyDashboard\\FacultyDashboard.js":"10","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\Dashboard.js":"11","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\managementDashboard\\ManagementDashboard.js":"12","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\dashboardComponents\\listItems.js":"13","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddCourse.js":"14","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\AddNewAccount.js":"15","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddDegreeProgram.js":"16","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddSchool.js":"17","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddDepartment.js":"18","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddSemester.js":"19","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddOfferedCourse.js":"20","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddSchoolForm.js":"21","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddSemesterForm.js":"22","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddDepartmentForm.js":"23","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddDegreeProgramForm.js":"24","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddCourseForm.js":"25","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddFaculty.js":"26","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddStudents.js":"27","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddFacultyForm.js":"28","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddStudentForm.js":"29","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddOfferedCourseForm.js":"30","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\SemesterTable.js":"31","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\SchoolTable.js":"32","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\DepartmentTable.js":"33","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\CourseTable.js":"34","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\DegreeProgramTable.js":"35","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\FacultyTable.js":"36","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\StudentTable.js":"37"},{"size":547,"mtime":1610298573206,"results":"38","hashOfConfig":"39"},{"size":2728,"mtime":1610298594572,"results":"40","hashOfConfig":"39"},{"size":362,"mtime":499162500000,"results":"41","hashOfConfig":"39"},{"size":8162,"mtime":1609896613476,"results":"42","hashOfConfig":"39"},{"size":257,"mtime":1609821347634,"results":"43","hashOfConfig":"39"},{"size":466,"mtime":1609882587745,"results":"44","hashOfConfig":"39"},{"size":5906,"mtime":1609867456278,"results":"45","hashOfConfig":"39"},{"size":5504,"mtime":1609961408278,"results":"46","hashOfConfig":"39"},{"size":5918,"mtime":1609857377418,"results":"47","hashOfConfig":"39"},{"size":5918,"mtime":1609857326766,"results":"48","hashOfConfig":"39"},{"size":1597,"mtime":1609881628270,"results":"49","hashOfConfig":"39"},{"size":5924,"mtime":1609859411635,"results":"50","hashOfConfig":"39"},{"size":6905,"mtime":1609896745166,"results":"51","hashOfConfig":"39"},{"size":380,"mtime":1609989782896,"results":"52","hashOfConfig":"39"},{"size":89,"mtime":1609896650060,"results":"53","hashOfConfig":"39"},{"size":449,"mtime":1609992441366,"results":"54","hashOfConfig":"39"},{"size":379,"mtime":1609976149764,"results":"55","hashOfConfig":"39"},{"size":419,"mtime":1609983348981,"results":"56","hashOfConfig":"39"},{"size":398,"mtime":1609964460479,"results":"57","hashOfConfig":"39"},{"size":289,"mtime":1609906690263,"results":"58","hashOfConfig":"39"},{"size":4713,"mtime":1609975601243,"results":"59","hashOfConfig":"39"},{"size":6655,"mtime":1609990941585,"results":"60","hashOfConfig":"39"},{"size":8419,"mtime":1610414251196,"results":"61","hashOfConfig":"39"},{"size":6174,"mtime":1609991941767,"results":"62","hashOfConfig":"39"},{"size":10078,"mtime":1610405008091,"results":"63","hashOfConfig":"39"},{"size":375,"mtime":1610401625580,"results":"64","hashOfConfig":"39"},{"size":390,"mtime":1610411319072,"results":"65","hashOfConfig":"39"},{"size":10728,"mtime":1610406019859,"results":"66","hashOfConfig":"39"},{"size":13336,"mtime":1610409232862,"results":"67","hashOfConfig":"39"},{"size":9838,"mtime":1610414813169,"results":"68","hashOfConfig":"39"},{"size":2519,"mtime":1609978314110,"results":"69","hashOfConfig":"39"},{"size":2380,"mtime":1609978292380,"results":"70","hashOfConfig":"39"},{"size":2693,"mtime":1609989677769,"results":"71","hashOfConfig":"39"},{"size":2668,"mtime":1610391686384,"results":"72","hashOfConfig":"39"},{"size":2394,"mtime":1609992405423,"results":"73","hashOfConfig":"39"},{"size":2694,"mtime":1610401575015,"results":"74","hashOfConfig":"39"},{"size":2832,"mtime":1610411553285,"results":"75","hashOfConfig":"39"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},"129xggd",{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"78"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"78"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"78"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"78"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"78"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"78"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"78"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"128","usedDeprecatedRules":"78"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"131","messages":"132","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133","usedDeprecatedRules":"78"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\index.js",[],["160","161"],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\App.js",["162"],"import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Dashboard from './views/Dashboard'\nimport SignInForm from './views/SignInForm';\nimport axios from 'axios';\nimport Auth from './Auth';\nimport PrivateRoute from './PrivateRoute';\n\nlet account = {\n  accountType: '',\n  accountID: ''\n}\n\nclass SignIn extends React.Component {\n  constructor (props) {\n    super (props);\n    this.state = {\n      accountType: '',\n      accountID: '',\n      password: '',\n      redirectToReferrer: false,\n      successMessage: 'Enter your username and password to login.'\n    };\n\n    this.handleSignInSubmit = this.handleSignInSubmit.bind(this);\n    this.handleSignInChange = this.handleSignInChange.bind(this);\n  }\n\n  handleSignInChange (event) {\n    const target = event.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  handleSignInSubmit (event) {\n    this.login(this.state.accountType, this.state.accountID, this.state.password)\n  }\n\n  login = async (accountType, accountID, password) => {\n    console.log()\n    const response = await axios.post (\n      '/login',\n      { accountType: accountType, accountID: accountID, password: password },\n      { headers: { 'Content-Type': 'application/json' } }\n    )\n    console.log(response);\n    this.setState({\n      successMessage: response.data.success\n    });\n    if (response.data.success === 'Login Sucessfull.') {\n      Auth.authenticate();\n      this.setState({\n          redirectToReferrer: true\n      });\n      account.accountType = this.state.accountType;\n      account.accountID = this.state.accountID;\n    }\n    else {\n      Auth.signOut();\n    }\n  }\n\n  render () {  \n    let { from } = this.props.location.pathname || { from: {pathname: '/'}};\n\n    if (this.state.redirectToReferrer) {\n      return <Redirect to={'/dashboard?accountType=' + this.state.accountType + '&accountID=' + this.state.accountID }/>\n    }\n\n    return (\n      <div className=\"SignInForm\">\n        <SignInForm\n          successMessage={this.state.successMessage} \n          onHandleChange={this.handleSignInChange}\n          onHandleSubmit={this.handleSignInSubmit} />\n      </div>\n    );\n  }\n}\n\nclass App extends React.Component {\n  render () {\n    let  a = 34;\n    console.log(a);\n    \n    return (\n      <Router>\n        <div className=\"Dashboard\">\n        <header className=\"Dashboard-header\">\n        </header>\n\n        <Switch>\n          <Route path='/sign-in' component={SignIn} />\n          <PrivateRoute path='/dashboard' component={Dashboard} />\n          <Route component={SignIn} />\n        </Switch>\n      </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\reportWebVitals.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\AdminDashboard.js",["163"],"/* eslint-disable no-unused-vars */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { BrowserRouter as Router, Switch } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\nimport Auth from '../../Auth.js';\r\nimport PrivateRoute from '../../PrivateRoute.js';\r\nimport MainListItems from './dashboardComponents/listItems';\r\nimport AddNewAccount from './views/AddNewAccount.js';\r\nimport ViewAddCourse from './views/ViewAddCourse.js';\r\nimport ViewAddDegreeProgram from './views/ViewAddDegreeProgram.js';\r\nimport ViewAddDepartment from './views/ViewAddDepartment.js';\r\nimport ViewAddOfferedCourse from './views/ViewAddOfferedCourse.js';\r\nimport ViewAddSchool from './views/ViewAddSchool.js';\r\nimport ViewAddSemester from './views/ViewAddSemester.js';\r\nimport ViewAddFaculty from './views/ViewAddFaculty.js';\r\nimport ViewAddStudents from './views/ViewAddStudents.js';\r\n\r\nconst NotFound = ({ location }) => {\r\n  \r\n  return (\r\n    <div>\r\n      <h3>No match for <code>{location.pathname}</code></h3>\r\n    </div> );\r\n}\r\nfunction Home () {\r\n  return (\r\n    <Grid item xs={12} md={12} lg={12}>\r\n      <Paper>\r\n        <Typography variant=\"h2\" component=\"h2\" gutterBottom>\r\n          Welcome to your Dashboard\r\n        </Typography>\r\n        <Typography variant=\"h6\" component=\"h6\" gutterBottom>\r\n          Refer to the left panel for your options\r\n        </Typography>\r\n      </Paper>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 350;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function AdminDashboard (props) {  \r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const [accountID, setAccountID] = useState('');\r\n  const [accountType, setAccountType] = useState('');\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSignOutClick = () => {\r\n    console.log('click')\r\n    if (Auth.isAuthenticated === true) {\r\n      Auth.signOut();\r\n      props.history.push('/');\r\n    }\r\n  }\r\n\r\n  useEffect(()=> {\r\n    return () => {\r\n      setAccountType(props.accountType);\r\n      setAccountID(props.accountID);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n\r\n    <Router>\r\n\r\n      <div className={classes.root}>\r\n\r\n        <CssBaseline />\r\n\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Admin Dashboard\r\n            </Typography>\r\n            <Link>\r\n              <ListItem button>\r\n                  <ListItemText>\r\n                    <Button onClick={handleSignOutClick}>\r\n                      Sign Out\r\n                    </Button>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List>\r\n            <MainListItems\r\n              accountID={props.accountID}\r\n              accountType={props.accountType}\r\n            ></MainListItems>\r\n          </List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n\r\n            <Switch>\r\n              <PrivateRoute exact path='/dashboard' component={Home} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-courses'} component={ViewAddCourse} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-semester'} component={ViewAddSemester} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-offered-course'} component={ViewAddOfferedCourse} />\r\n              <PrivateRoute exact path={'/dashboard/view-students'} component={ViewAddStudents} />\r\n              <PrivateRoute exact path={'/dashboard/view-faculties'} component={ViewAddFaculty} />\r\n              <PrivateRoute exact path={'/dashboard/add-new-account'} component={AddNewAccount} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-school'} component={ViewAddSchool} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-dept'} component={ViewAddDepartment} />\r\n              <PrivateRoute exact path={'/dashboard/view-add-degree-programs'} component={ViewAddDegreeProgram} />\r\n              <PrivateRoute component={NotFound} />\r\n            </Switch>\r\n\r\n            </Grid>\r\n\r\n          </Container>\r\n\r\n        </main>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\Auth.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\PrivateRoute.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\SignInForm.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\accreditorDashboard\\AccreditorDashboard.js",["164"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\nimport Auth from '../../Auth.js';\r\n\r\nconst NotFound = ({ location }) => (\r\n  <div>\r\n    <h3>No match for <code>{location.pathname}</code></h3>\r\n  </div>\r\n)\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function AccreditorDashboard (props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleSignOutClick = () => {\r\n    console.log('click')\r\n    if (Auth.isAuthenticated === true) {\r\n      Auth.signOut();\r\n      props.history.push('/');\r\n    }\r\n  }\r\n\r\n  return (\r\n\r\n    <Router>\r\n\r\n      <div className={classes.root}>\r\n\r\n        <CssBaseline />\r\n\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Accreditor Dashboard\r\n            </Typography>\r\n            <Link>\r\n              <ListItem button>\r\n                  <ListItemText>\r\n                    <Button onClick={handleSignOutClick}>\r\n                      Sign Out\r\n                    </Button>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List></List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n\r\n              {/* Heading */}\r\n          \r\n                <h1>hello</h1>\r\n\r\n            </Grid>\r\n\r\n          </Container>\r\n\r\n        </main>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\studentDashboard\\StudentDashboard.js",["165","166"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\n\r\nconst NotFound = ({ location }) => (\r\n  <div>\r\n    <h3>No match for <code>{location.pathname}</code></h3>\r\n  </div>\r\n)\r\n\r\nfunction Copyright () {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function StudentDashboard (props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  /*const handleSignOutClick = () => {\r\n    console.log('click')\r\n    if (Auth.isAuthenticated === true) {\r\n      Auth.signOut();\r\n      props.history.push('/');\r\n    }\r\n  }*/\r\n\r\n  return (\r\n\r\n    <Router>\r\n\r\n      <div className={classes.root}>\r\n\r\n        <CssBaseline />\r\n\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Student Dashboard\r\n            </Typography>\r\n            <Link>\r\n              <ListItem button>\r\n                  <ListItemText>\r\n                    <Button >\r\n                      Sign Out\r\n                    </Button>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List></List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n\r\n              {/* Heading */}\r\n          \r\n                <h1>hello</h1>\r\n\r\n            </Grid>\r\n\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n          </Container>\r\n\r\n        </main>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\facultyDashboard\\FacultyDashboard.js",["167","168"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\n\r\nconst NotFound = ({ location }) => (\r\n  <div>\r\n    <h3>No match for <code>{location.pathname}</code></h3>\r\n  </div>\r\n)\r\n\r\nfunction Copyright () {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function FacultyDashboard (props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  /*const handleSignOutClick = () => {\r\n    console.log('click')\r\n    if (Auth.isAuthenticated === true) {\r\n      Auth.signOut();\r\n      props.history.push('/');\r\n    }\r\n  }*/\r\n\r\n  return (\r\n\r\n    <Router>\r\n\r\n      <div className={classes.root}>\r\n\r\n        <CssBaseline />\r\n\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Faculty Dashboard\r\n            </Typography>\r\n            <Link>\r\n              <ListItem button>\r\n                  <ListItemText>\r\n                    <Button >\r\n                      Sign Out\r\n                    </Button>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List></List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n\r\n              {/* Heading */}\r\n          \r\n                <h1>hello</h1>\r\n\r\n            </Grid>\r\n\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n          </Container>\r\n\r\n        </main>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\Dashboard.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\managementDashboard\\ManagementDashboard.js",["169","170"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Box from '@material-ui/core/Box';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport List from '@material-ui/core/List';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Container from '@material-ui/core/Container';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Link from '@material-ui/core/Link';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport Button from '@material-ui/core/Button';\r\nimport clsx from 'clsx';\r\n\r\nconst NotFound = ({ location }) => (\r\n  <div>\r\n    <h3>No match for <code>{location.pathname}</code></h3>\r\n  </div>\r\n)\r\n\r\nfunction Copyright () {\r\n  return (\r\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n      {'Copyright © '}\r\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n        Your Website\r\n      </Link>{' '}\r\n      {new Date().getFullYear()}\r\n      {'.'}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    display: 'flex',\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n  },\r\n  container: {\r\n    paddingTop: theme.spacing(4),\r\n    paddingBottom: theme.spacing(4),\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    display: 'flex',\r\n    overflow: 'auto',\r\n    flexDirection: 'column',\r\n  },\r\n  fixedHeight: {\r\n    height: 240,\r\n  },\r\n}));\r\n\r\nexport default function ManagementDashboard (props) {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = React.useState(false);\r\n  const handleDrawerOpen = () => {\r\n    setOpen(true);\r\n  };\r\n  const handleDrawerClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  /*const handleSignOutClick = () => {\r\n    console.log('click')\r\n    if (Auth.isAuthenticated === true) {\r\n      Auth.signOut();\r\n      props.history.push('/');\r\n    }\r\n  }*/\r\n\r\n  return (\r\n\r\n    <Router>\r\n\r\n      <div className={classes.root}>\r\n\r\n        <CssBaseline />\r\n\r\n        <AppBar position=\"absolute\" className={clsx(classes.appBar, open && classes.appBarShift)}>\r\n          <Toolbar className={classes.toolbar}>\r\n            <IconButton\r\n              edge=\"start\"\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              onClick={handleDrawerOpen}\r\n              className={clsx(classes.menuButton, open && classes.menuButtonHidden)}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\r\n              Management Dashboard\r\n            </Typography>\r\n            <Link>\r\n              <ListItem button>\r\n                  <ListItemText>\r\n                    <Button >\r\n                      Sign Out\r\n                    </Button>\r\n                  </ListItemText>\r\n              </ListItem>\r\n            </Link>\r\n          </Toolbar>\r\n        </AppBar>\r\n\r\n        <Drawer\r\n          variant=\"permanent\"\r\n          classes={{\r\n            paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\r\n          }}\r\n          open={open}\r\n        >\r\n          <div className={classes.toolbarIcon}>\r\n            <IconButton onClick={handleDrawerClose}>\r\n              <ChevronLeftIcon />\r\n            </IconButton>\r\n          </div>\r\n          <Divider />\r\n          <List></List>\r\n        </Drawer>\r\n\r\n        <main className={classes.content}>\r\n\r\n          <div className={classes.appBarSpacer} />\r\n\r\n          <Container maxWidth=\"lg\" className={classes.container}>\r\n            <Grid container spacing={3}>\r\n\r\n              {/* Heading */}\r\n          \r\n                <h1>hello</h1>\r\n\r\n            </Grid>\r\n\r\n            <Box pt={4}>\r\n              <Copyright />\r\n            </Box>\r\n\r\n          </Container>\r\n\r\n        </main>\r\n\r\n      </div>\r\n\r\n    </Router>\r\n  );\r\n}","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\dashboardComponents\\listItems.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddCourse.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\AddNewAccount.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddDegreeProgram.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddSchool.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddDepartment.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddSemester.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddOfferedCourse.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddSchoolForm.js",["171","172","173"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nclass AddSchoolForm extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            schoolName: '',\r\n            location: '',\r\n            deanInChargeName: ''\r\n        };\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    handleChange (event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit (event) {\r\n        event.preventDefault();\r\n        const schoolData = this.state;\r\n        // Use api to insert data into school table\r\n        this.submitFormData(schoolData);\r\n        this.setState({\r\n            schoolName: '',\r\n            location: '',\r\n            deanInChargeName: ''\r\n        });\r\n    }\r\n\r\n    submitFormData = async (schoolData) => {\r\n        const response = await axios.post(\r\n            '/api/put/schooldata',\r\n            schoolData,\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n        )\r\n        console.log(response);\r\n        if (response.data.success === 'School Data Entered.')  {\r\n            console.log('School Data entered')\r\n        }\r\n        \r\n    }\r\n    render () {\r\n        const classes = useStyles;\r\n        let successMessage = this.props.successMessage;\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\">\r\n                <CssBaseline />\r\n                <div className={classes.paper}>\r\n\r\n                    <Typography component=\"h1\" variant=\"h5\">\r\n                        Add a School to the University\r\n                    </Typography>\r\n                    <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"schoolName\"\r\n                            label=\"School Name\"\r\n                            name=\"schoolName\"\r\n                            autoFocus\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"location\"\r\n                            label=\"School Location\"\r\n                            name=\"location\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <TextField\r\n                            variant=\"filled\"\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"deanInChargeName\"\r\n                            label=\"Dean In Charge's Full Name\"\r\n                            name=\"deanInChargeName\"\r\n                            onChange={this.handleChange}\r\n                        />\r\n                        <Button\r\n                            type=\"submit\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.submit}\r\n                        >\r\n                            Save\r\n                        </Button>\r\n                    </form>\r\n                    <Typography>\r\n                        { successMessage }\r\n                    </Typography>\r\n                </div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddSchoolForm;","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddSemesterForm.js",["174","175"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from '@material-ui/pickers';\r\nimport axios from 'axios';\r\nimport dateFormat from  'dateformat';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nclass AddSemesterForm extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            season: '',\r\n            year: '',\r\n            startDate: dateFormat(new Date('2014-08-18'), \"isoDate\"),\r\n            endDate: dateFormat(new Date('2014-08-18'), \"isoDate\")\r\n        };\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleStartDateChange = this.handleStartDateChange.bind(this);\r\n        this.handleEndDateChange = this.handleEndDateChange.bind(this);\r\n    }\r\n\r\n    handleChange (event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit (event) {\r\n        event.preventDefault();\r\n        const semesterData = this.state;\r\n        // Use api to insert data into semester table\r\n        this.submitFormData(semesterData);\r\n        this.setState({\r\n            season: '',\r\n            year: '',\r\n            startDate: dateFormat(new Date('2014-08-18'), \"isoDate\"),\r\n            endDate: dateFormat(new Date('2014-08-18'), \"isoDate\")\r\n        });\r\n    }  \r\n\r\n    handleStartDateChange (event) {\r\n        console.dir(event);\r\n        this.setState({\r\n            startDate: dateFormat(event, \"isoDate\")\r\n        });\r\n        //this.props.onHandleChange(event);\r\n    }\r\n\r\n    handleEndDateChange (event) {\r\n        console.dir(event);\r\n        this.setState({\r\n            endDate: dateFormat(event, \"isoDate\")\r\n        });\r\n        //this.props.onHandleChange(event);\r\n    }\r\n\r\n    submitFormData = async (semesterData) => {\r\n        const response = await axios.post(\r\n            '/api/put/semesterdata',\r\n            semesterData,\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n        )\r\n        console.log(response);\r\n        if (response.data.success === 'Semester Data Entered.')  {\r\n            console.log('Semester Data entered')\r\n        }\r\n        \r\n    }\r\n \r\n    render () {\r\n        const classes = useStyles;\r\n        let successMessage = this.props.successMessage;\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Add a Semester\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"season\"\r\n                                label=\"Semester Season\"\r\n                                name=\"season\"\r\n                                autoFocus\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"year\"\r\n                                label=\"Semester Year\"\r\n                                name=\"year\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <KeyboardDatePicker\r\n                                fullWidth\r\n                                format=\"yyyy/MM/dd\"\r\n                                margin=\"normal\"\r\n                                id=\"startDate\"\r\n                                label=\"Semester Start Date\"\r\n                                value={this.state.startDate}\r\n                                onChange={this.handleStartDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                            <KeyboardDatePicker\r\n                                fullWidth\r\n                                format=\"yyyy/MM/dd\"\r\n                                margin=\"normal\"\r\n                                id=\"endDate\"\r\n                                label=\"Semester End Date\"\r\n                                value={this.state.endDate}\r\n                                onChange={this.handleEndDateChange}\r\n                                KeyboardButtonProps={{\r\n                                    'aria-label': 'change date',\r\n                                }}\r\n                            />\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </form>\r\n                        <Typography>\r\n                            { successMessage }\r\n                        </Typography>\r\n                    </div>\r\n                </Container>\r\n            </MuiPickersUtilsProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddSemesterForm;","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddDepartmentForm.js",["176","177","178"],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddDegreeProgramForm.js",["179","180"],"import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider\r\n} from '@material-ui/pickers';\r\nimport axios from 'axios';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(0),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nlet deptList = [];\r\n\r\nclass AddDegreeProgramForm extends React.Component {\r\n    constructor (props) {\r\n        super (props);\r\n        this.state = {\r\n            degreeID: '',\r\n            degreeTitle: '',\r\n            deptID: [],\r\n            deptList: []\r\n        };\r\n        \r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSelectChange = this.handleSelectChange.bind(this);\r\n    }\r\n\r\n    async componentDidMount () {\r\n        const { data } = await axios.get('/api/get/department');\r\n        console.dir(data);\r\n        this.setState ({ deptList: data.response });\r\n        deptList = this.state.deptList;\r\n        console.log(deptList);\r\n        this.forceUpdate();\r\n    }\r\n\r\n    handleChange (event) {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n        \r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    handleSubmit (event) {\r\n        event.preventDefault();\r\n        \r\n        const degreeProgramData = this.state;\r\n        // Use api to insert data into semester table\r\n        this.submitFormData(degreeProgramData);\r\n        this.setState({\r\n            degreeID: '',\r\n            degreeTitle: '',\r\n            deptID: []\r\n        });\r\n    }  \r\n\r\n    \r\n    handleSelectChange (event) {\r\n        this.setState({\r\n            deptID: event.target.value\r\n        });\r\n    }\r\n\r\n    submitFormData = async (degreeProgramData) => {\r\n        const response = await axios.post(\r\n            '/api/put/degreeprogramdata',\r\n            degreeProgramData,\r\n            { headers: { 'Content-Type': 'application/json' } }\r\n        )\r\n        console.log(response);\r\n        if (response.data.success === 'Department Data Entered.')  {\r\n            console.log('Department Data entered')\r\n        }\r\n        \r\n    }\r\n\r\n    render () {\r\n        const classes = useStyles;\r\n        let successMessage = this.props.successMessage;\r\n        return (\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                    <CssBaseline />\r\n                    <div className={classes.paper}>\r\n\r\n                        <Typography component=\"h1\" variant=\"h5\">\r\n                            Add a Degree Program\r\n                        </Typography>\r\n                        <form className={classes.form} noValidate onSubmit={this.handleSubmit}>\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"degreeID\"\r\n                                label=\"Degree ID\"\r\n                                name=\"degreeID\"\r\n                                autoFocus\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                required\r\n                                fullWidth\r\n                                id=\"degreeTitle\"\r\n                                label=\"Degree Title\"\r\n                                name=\"degreeTitle\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                            <TextField\r\n                                fullWidth\r\n                                required\r\n                                id=\"deptID\"\r\n                                name=\"deptID\"\r\n                                select\r\n                                label=\"Department Name\"\r\n                                value={this.state.deptID}\r\n                                onChange={this.handleSelectChange}\r\n                                variant=\"filled\"\r\n                                margin=\"normal\"\r\n                                >\r\n                                   {deptList.map((option) => (\r\n                                    <MenuItem key={uuidv4()} value={option.deptID}>\r\n                                        {option.deptName}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </TextField>\r\n                            <Button\r\n                                type=\"submit\"\r\n                                fullWidth\r\n                                variant=\"contained\"\r\n                                color=\"primary\"\r\n                                className={classes.submit}\r\n                            >\r\n                                Save\r\n                            </Button>\r\n                        </form>\r\n                        <Typography>\r\n                            { successMessage }\r\n                        </Typography>\r\n                    </div>\r\n                </Container>\r\n            </MuiPickersUtilsProvider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddDegreeProgramForm;","E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddCourseForm.js",["181","182"],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddFaculty.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\ViewAddStudents.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddFacultyForm.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddStudentForm.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\forms\\AddOfferedCourseForm.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\SemesterTable.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\SchoolTable.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\DepartmentTable.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\CourseTable.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\DegreeProgramTable.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\FacultyTable.js",[],"E:\\Codes\\workspace\\DatabaseProject\\spms-project\\client\\src\\views\\adminDashboard\\views\\tables\\StudentTable.js",[],{"ruleId":"183","replacedBy":"184"},{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":68,"column":11,"nodeType":"189","messageId":"190","endLine":68,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":165,"column":6,"nodeType":"193","endLine":165,"endColumn":8,"suggestions":"194"},{"ruleId":"187","severity":1,"message":"195","line":23,"column":7,"nodeType":"189","messageId":"190","endLine":23,"endColumn":15},{"ruleId":"187","severity":1,"message":"196","line":14,"column":8,"nodeType":"189","messageId":"190","endLine":14,"endColumn":13},{"ruleId":"187","severity":1,"message":"195","line":24,"column":7,"nodeType":"189","messageId":"190","endLine":24,"endColumn":15},{"ruleId":"187","severity":1,"message":"196","line":14,"column":8,"nodeType":"189","messageId":"190","endLine":14,"endColumn":13},{"ruleId":"187","severity":1,"message":"195","line":24,"column":7,"nodeType":"189","messageId":"190","endLine":24,"endColumn":15},{"ruleId":"187","severity":1,"message":"196","line":14,"column":8,"nodeType":"189","messageId":"190","endLine":14,"endColumn":13},{"ruleId":"187","severity":1,"message":"195","line":24,"column":7,"nodeType":"189","messageId":"190","endLine":24,"endColumn":15},{"ruleId":"187","severity":1,"message":"197","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"198","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":24},{"ruleId":"187","severity":1,"message":"199","line":10,"column":8,"nodeType":"189","messageId":"190","endLine":10,"endColumn":16},{"ruleId":"187","severity":1,"message":"197","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"198","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":24},{"ruleId":"187","severity":1,"message":"197","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"198","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":24},{"ruleId":"187","severity":1,"message":"200","line":14,"column":3,"nodeType":"189","messageId":"190","endLine":14,"endColumn":21},{"ruleId":"187","severity":1,"message":"197","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"198","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":24},{"ruleId":"187","severity":1,"message":"197","line":2,"column":8,"nodeType":"189","messageId":"190","endLine":2,"endColumn":14},{"ruleId":"187","severity":1,"message":"198","line":6,"column":8,"nodeType":"189","messageId":"190","endLine":6,"endColumn":24},"no-native-reassign",["201"],"no-negated-in-lhs",["202"],"no-unused-vars","'from' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props.accountID' and 'props.accountType'. Either include them or remove the dependency array. If 'setAccountType' needs the current value of 'props.accountType', you can also switch to useReducer instead of useState and read 'props.accountType' in the reducer.","ArrayExpression",["203"],"'NotFound' is assigned a value but never used.","'Paper' is defined but never used.","'Avatar' is defined but never used.","'LockOutlinedIcon' is defined but never used.","'MenuItem' is defined but never used.","'KeyboardDatePicker' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"204","fix":"205"},"Update the dependencies array to be: [props.accountID, props.accountType]",{"range":"206","text":"207"},[5049,5051],"[props.accountID, props.accountType]"]